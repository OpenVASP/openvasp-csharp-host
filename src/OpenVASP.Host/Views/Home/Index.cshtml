@using Microsoft.AspNetCore.Mvc.Routing
@using OpenVASP.Host.Core.Models
@model OpenVASP.Host.Models.Response.MainPageModel
@{
    ViewBag.Title = "OpenVASP Host";
    Layout = "_Layout";
}
<script xmlns="http://www.w3.org/1999/html">

$( document ).ready(function() {
     $(".table-row").click(function(event) {
         if(!$(event.target).hasClass('btn')) {
             var win = window.open($(this).data("href"), '_blank');
             win.focus();
         }
     });
    
    transactionId = "";
    
    setTransactionId = function(val) {
        transactionId = val;
    };
    
    $('.modal').on('hidden.bs.modal', function(){
        $(this).find('form')[0].reset();
        setTimeout(() => {$(this).find('form').attr('class',"needs-validation")},1);
    });
    
    makeIncomingTransactionsTransactionRequestResponseUrl = function() {
        var url = 'api/incomingTransactions/' + transactionId + '/reply?shouldAllow='
            + $("input[name='inputShouldAllowTransfer']:checked").val();
        
        var destinationAddress = $("#inputShouldAllowTransferBeneficiaryAddress").val();
        
        if(destinationAddress != "") {
            url = url + '&destinationAddress=' + destinationAddress
        }
        
        return url;
    };
    
    makeTransactionDispatchUrl = function() {
        return 'api/outgoingTransactions/' + transactionId + '/dispatch?sendingAddress='
            + $("#inputTransactionSendingAddress").val() + "&transactionHash="
            + $("#inputTransactionHash").val();
    };
    
    transferConfirm = function(button, id) {
        $(button).prop("disabled", true);
        // add spinner to button
        $(button).html(
        '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Confirming...');
        
        $.ajax({
            type: "PUT",
            url: 'api/incomingTransactions/' + id + '/confirm',
            contentType: "application/json",
            success: function (msg) {
                toastr.info("Confirmation was sent.");
                $(button).hide();
            },
            error: function (req, status, error) {
                toastr.error("Something went wrong.");
                console.log(error);
                $(button).prop("disabled", false);
                $(button).html("Confirm");
            }
        });
    };
    
    respondToTransferRequest = function() {
        setTransactionRequestResponseButtonToLoading();
        
        $.ajax({
            type: "PUT",
            url: makeIncomingTransactionsTransactionRequestResponseUrl(),
            contentType: "application/json",
            success: function (msg) {
                toastr.info("Response was sent.");                   
                hideTransactionRequestResponseModal();
                setTransactionRequestResponseButtonToDefault();
            },
            error: function (req, status, error) {
                toastr.error("Something went wrong.");
                console.log(error);
                hideTransactionRequestResponseModal();
                setTransactionRequestResponseButtonToDefault();
            }
        });
    };
    
    transferDispatch = function() {
        var forms = document.getElementsByClassName('create-dispatch-modal-form');
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function(form) {
            if (form.checkValidity() === false) {
            
            } else {
                setDispatchButtonToLoading();
                
                $.ajax({
                    type: "PUT",
                    url: makeTransactionDispatchUrl(),
                    contentType: "application/json",
                    success: function (msg) {
                        toastr.info("Dispatch was sent.");                   
                        hideDispatchModal();
                        setDispatchButtonToDefault();
                    },
                    error: function (req, status, error) {
                        toastr.error("Something went wrong.");
                        console.log(error);
                        hideDispatchModal();
                        setDispatchButtonToDefault();
                    }
                });
            }
            form.classList.add('was-validated');
        });
    };
    
    $("#createTransactionButton").click(function() {
        var forms = document.getElementsByClassName('create-transfer-modal-form');
            // Loop over them and prevent submission
            var validation = Array.prototype.filter.call(forms, function(form) {
                if (form.checkValidity() === false) {
                  
                } else {
                    setTransactionCreationButtonToLoading();
                    
                    $.ajax({
                        type: "POST",
                        url: 'api/outgoingTransactions/create',
                        contentType: "application/json",
                        dataType: 'json',
                        data: JSON.stringify({
                            BeneficiaryFullName: $("#inputBeneficiaryName").val(),
                            BeneficiaryVaan: $("#inputBeneficiaryVaan").val(),
                            OriginatorFullName: $("#inputOriginatorName").val(),
                            OriginatorVaan: $("#inputOriginatorVaan").val(),
                            OriginatorPostalAddress: {
                                Street: $("#inputOriginatorPostalAddressStreet").val(),
                                Building: $("#inputOriginatorPostalAddressBuilding").val(),
                                AddressLine: $("#inputOriginatorPostalAddressAddressLine").val(),
                                PostCode: $("#inputOriginatorPostalAddressPostCode").val(),
                                Country: $("#inputOriginatorPostalAddressCountry").val(),
                                Town: $("#inputOriginatorPostalAddressTown").val()
                            },
                            OriginatorPlaceOfBirth: {
                                Town: $("#inputOriginatorPlaceOfBirthTown").val(),
                                Country: $("#inputOriginatorPlaceOfBirthCountry").val(),
                                Date: $("#inputOriginatorPlaceOfBirthDate").val()
                            },
                            Asset: $("#inputAsset").val(),
                            Amount: $("#inputAmount").val()
                        }),
                        success: function (msg) {
                            toastr.info("The transaction was created.");                   
                            hideTransactionCreationModal();
                            setTransactionCreationButtonToDefault();
                        },
                        error: function (req, status, error) {
                            toastr.error("Something went wrong.");
                            console.log(error);
                            hideTransactionCreationModal();
                            setTransactionCreationButtonToDefault();
                        }
                    }); 
                    
                }
                form.classList.add('was-validated');
            });
    });
    
    hideTransactionCreationModal = function() {
        $("#exampleModal").modal("hide");
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    };
    
    hideTransactionRequestResponseModal = function() {
        $("#transferRequestResponseModal").modal("hide");
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    };
    
    hideDispatchModal = function() {
        $("#transferDispatchModal").modal("hide");
        $('body').removeClass('modal-open');
        $('.modal-backdrop').remove();
    };
    
    setTransactionCreationButtonToLoading = function() {
        // disable button
        $("#createTransactionButton").prop("disabled", true);
        // add spinner to button
        $("#createTransactionButton").html(
        '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Creating...');
    };
    
    setTransactionCreationButtonToDefault = function() {
        $("#createTransactionButton").prop("disabled", false);
        $("#createTransactionButton").html("Create");
    };
        
    setTransactionRequestResponseButtonToLoading = function() {
        // disable button
        $("#respondToTransferRequestButton").prop("disabled", true);
        // add spinner to button
        $("#respondToTransferRequestButton").html(
        '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Responding...');
    };
    
    setTransactionRequestResponseButtonToDefault = function() {
        $("#respondToTransferRequestButton").prop("disabled", false);
        $("#respondToTransferRequestButton").html("Respond");
    };
        
    setDispatchButtonToLoading = function() {
        // disable button
        $("#transferDispatchButton").prop("disabled", true);
        // add spinner to button
        $("#transferDispatchButton").html(
        '<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span> Dispatching...');
    };
    
    setDispatchButtonToDefault = function() {
        $("#transferDispatchButton").prop("disabled", false);
        $("#transferDispatchButton").html("Dispatch");
    };
});
</script>

<style>
    .modal-dialog{
        overflow-y: initial !important
    }
    .modal-body{
        overflow-y: auto;
    }
    .table-row{
    cursor:pointer;
    }
</style>

<button type="button" class="btn btn-primary" data-toggle="modal" data-target="#exampleModal">
    Create New Transaction
</button>

<div class="modal fade" id="transferRequestResponseModal" tabindex="-1" role="dialog" aria-labelledby="transferRequestResponseModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="transferRequestResponseModalLabel">Respond To A Transfer Request</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="needs-validation">
                    <h5>Response type:</h5>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="inputShouldAllowTransfer" id="shouldAllowTransferAllow" value="true" checked>
                        <label class="form-check-label" for="shouldAllowTransferAllow">
                            Allow transaction
                        </label>
                    </div>
                    <div class="form-check">
                        <input class="form-check-input" type="radio" name="inputShouldAllowTransfer" id="shouldAllowTransferForbid" value="false">
                        <label class="form-check-label" for="shouldAllowTransferForbid">
                            Forbid transaction
                        </label>
                    </div>
                    <br/>
                    <h5>Beneficiary Blockchain Address:</h5>
                    <div class="form-row">
                        <input type="text" class="form-control" id="inputShouldAllowTransferBeneficiaryAddress" placeholder="Please Provide If Allowing Transaction">
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="respondToTransferRequestButton" class="btn btn-primary mb-2" onclick="respondToTransferRequest()">Respond</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="transferDispatchModal" tabindex="-1" role="dialog" aria-labelledby="transferDispatchModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="transferDispatchModalLabel">Dispatch A Transfer</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form class="needs-validation create-dispatch-modal-form">
                    <h5>Blockchain Transaction:</h5>
                        <div class="form-row">
                            <div class="form-group col-md-6">
                                <input type="text" class="form-control" id="inputTransactionSendingAddress" placeholder="Sending Address" required>
                                <div class="invalid-feedback">
                                    Please enter Transaction Sending Address.
                                </div>
                            </div>
                            <div class="form-group col-md-6">
                                <input type="text" class="form-control" id="inputTransactionHash" placeholder="Transaction Hash" required>
                                <div class="invalid-feedback">
                                    Please enter Transaction Hash.
                                </div>
                            </div>
                        </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="transferDispatchButton" class="btn btn-primary mb-2" onclick="transferDispatch()">Dispatch</button>
            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="exampleModal" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLabel">Creating New Transaction</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" style="height: 400px;">
                <form class="needs-validation create-transfer-modal-form" novalidate>
                    <h5>Beneficiary Details:</h5>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <input type="text" class="form-control" id="inputBeneficiaryName" placeholder="Beneficiary Name" required>
                            <div class="invalid-feedback">
                                Please enter Beneficiary Name.
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <input type="text" class="form-control" id="inputBeneficiaryVaan" placeholder="Beneficiary VAAN" required pattern="\s*([a-fA-F0-9]\s*){24}">
                            <div class="invalid-feedback">
                                Please enter valid Beneficiary VAAN.
                            </div>
                        </div>
                    </div>
                    <h5>Originator Details:</h5>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <input type="text" class="form-control" id="inputOriginatorName" placeholder="Originator Name" required>
                            <div class="invalid-feedback">
                                Please enter Originator Name.
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <input type="text" class="form-control" id="inputOriginatorVaan" placeholder="Originator VAAN" required pattern="\s*([a-fA-F0-9]\s*){24}">
                            <div class="invalid-feedback">
                                Please enter valid Originator VAAN.
                            </div>
                        </div>
                    </div>
                    <h5>Originator Address:</h5>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <input type="text" class="form-control" id="inputOriginatorPostalAddressAddressLine" placeholder="Address Line" required>
                            <div class="invalid-feedback">
                                Please enter Address Line.
                            </div>
                        </div>
                        <div class="form-group col-md-6">
                            <input type="text" class="form-control" id="inputOriginatorPostalAddressTown" placeholder="Town" required>
                            <div class="invalid-feedback">
                                Please enter Town.
                            </div>
                        </div>
                    </div>
                    <div class="form-row">
                        <div class="form-group col-md-3">
                            <input type="text" class="form-control" id="inputOriginatorPostalAddressBuilding" placeholder="Building Number" required pattern="[1-9]{1}[0-9]*">
                            <div class="invalid-feedback">
                                Please enter valid Building Number.
                            </div>
                        </div>
                        <div class="form-group col-md-3">
                            <input type="text" class="form-control" id="inputOriginatorPostalAddressStreet" placeholder="Street Name" required>
                            <div class="invalid-feedback">
                                Please enter Street Name.
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            <select id="inputOriginatorPostalAddressCountry" class="form-control">
                                @foreach (var country in Model.Countries)
                                {
                                    <option value="@country">@country</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-2">
                            <input type="text" class="form-control" id="inputOriginatorPostalAddressPostCode" placeholder="Zip Code" required pattern="[0-9]*">
                            <div class="invalid-feedback">
                                Please enter valid Zip Code.
                            </div>
                        </div>
                    </div>
                    <h5>Originator Birth Info:</h5>
                    <div class="form-row">
                        <div class="form-group col-md-4">
                            <input type="text" class="form-control" id="inputOriginatorPlaceOfBirthTown" placeholder="Town" required>
                            <div class="invalid-feedback">
                                Please enter Town.
                            </div>
                        </div>
                        <div class="form-group col-md-4">
                            <select id="inputOriginatorPlaceOfBirthCountry" class="form-control">
                                @foreach (var country in Model.Countries)
                                {
                                    <option value="@country">@country</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-4">
                            <div class="input-group date" data-provide="datepicker" data-date-format="dd/mm/yyyy">
                                <input type='text' class="form-control" id="inputOriginatorPlaceOfBirthDate" placeholder="Date Of Birth" required pattern="([0-2][0-9]|(3)[0-1])(\/)(((0)[0-9])|((1)[0-2]))(\/)\d{4}"/>
                                <div class="input-group-addon">
                                </div>
                                <div class="invalid-feedback">
                                    Please enter valid Date Of Birth.
                                </div>
                            </div>
                        </div>
                    </div>
                    <h5>Transaction Details:</h5>
                    <div class="form-row">
                        <div class="form-group col-md-6">
                            <select id="inputAsset" class="form-control">
                                @foreach (var asset in Model.Assets)
                                {
                                    <option value="@asset">@asset</option>
                                }
                            </select>
                        </div>
                        <div class="form-group col-md-6">
                            <input type="text" class="form-control" id="inputAmount" placeholder="Amount" required pattern="[+-]?((\d+\.?\d*)|(\.\d+)){1}">
                            <div class="invalid-feedback">
                                Please enter valid Amount.
                            </div>
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" id="createTransactionButton" class="btn btn-primary mb-2">Create</button>
            </div>
        </div>
    </div>
</div>

<br/>
<br/>

<p class="h5">Outgoing transactions:</p>

@if (Model.OutgoingTransactions.Count == 0)
{
    <p class="h6">None</p>
    <br/>
    <br/>
}
else
{
    <table class="table table-hover">
        <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Creation Date and Time</th>
            <th scope="col">Status</th>
            <th scope="col">Action</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var transaction in Model.OutgoingTransactions)
        {
            <tr class="table-row" data-href="home/transaction/@transaction.Id">
                <td>@transaction.Id</td>
                <td>@transaction.CreationDateTime</td>
                <td>@transaction.StatusStringified</td>
                <td>
                    @if (transaction.Status == TransactionStatus.TransferAllowed)
                    {
                        <button type="button" class="btn btn-primary mb-2" data-toggle="modal" onclick="setTransactionId('@transaction.Id')" data-target="#transferDispatchModal">
                            Dispatch
                        </button>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
}

<p class="h5">Incoming transactions:</p>

@if (Model.IncomingTransactions.Count == 0)
{
    <p class="h6">None</p>
    <br/>
    <br/>
}
else
{
    <table class="table table-hover">
        <thead>
        <tr>
            <th scope="col">Id</th>
            <th scope="col">Creation Date and Time</th>
            <th scope="col">Status</th>
            <th scope="col">Action</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var transaction in Model.IncomingTransactions)
        {
            <tr class="table-row" data-href="home/transaction/@transaction.Id">
                <td>@transaction.Id</td>
                <td>@transaction.CreationDateTime</td>
                <td>@transaction.StatusStringified</td>
                <td>
                    @if (transaction.Status == TransactionStatus.TransferRequested)
                    {
                        <button type="button" class="btn btn-primary mb-2" data-toggle="modal" onclick="setTransactionId('@transaction.Id')" data-target="#transferRequestResponseModal">
                            Respond
                        </button>
                    }
                    @if (transaction.Status == TransactionStatus.TransferDispatched)
                    {
                        <button type="button" class="btn btn-primary mb-2" onclick="transferConfirm(this, '@transaction.Id')">
                            Confirm
                        </button>
                    }
                </td>
            </tr>
        }
        </tbody>
    </table>
}